//
// Base styles
//
:root {
  --input-group-addon-color: var(--dark-gray);
  --input-group-addon-bg: var(--near-white);
}

.input-group {
  position: relative;
  display: flex;
  align-items: stretch;
  width: 100%;

  .form-control {
    // Ensure that the input is always above the *appended* addon button for
    // proper border colors.
    position: relative;
    z-index: 2;
    flex: 1 1 auto;
    // Add width 1% and flex-basis auto to ensure that button will not wrap out
    // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
    width: 1%;
    margin-bottom: 0;

    // Bring the "active" form control to the front
    &:hover, &:focus, &:active {
      z-index: 3;
    }
  }
}

.input-group-addon,
.input-group-btn,
.input-group .form-control {
  display: flex;
  align-items: center;
  &:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
}

.input-group-addon,
.input-group-btn {
  white-space: nowrap;
}

//
// Text input groups
//

.input-group-addon {
  padding: var(--input-padding);
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  font-size: var(--base-font-size);
  line-height: var(--base-line-height);
  color: var(--input-group-addon-color);
  text-align: center;
  background-color: var(--input-group-addon-bg);
  border: var(--input-border);
  border-radius: var(--input-border-radius);

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}


//
// Reset rounded corners
//

.input-group .form-control:not(:last-child),
.input-group-addon:not(:last-child),
.input-group-btn:not(:last-child) > .btn,
.input-group-btn:not(:last-child) > .btn-group > .btn,
.input-group-btn:not(:last-child) > .dropdown-toggle,
.input-group-btn:not(:first-child) > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:not(:first-child) > .btn-group:not(:last-child) > .btn {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.input-group-addon:not(:last-child) {
  border-right: 0;
}
.input-group .form-control:not(:first-child),
.input-group-addon:not(:first-child),
.input-group-btn:not(:first-child) > .btn,
.input-group-btn:not(:first-child) > .btn-group > .btn,
.input-group-btn:not(:first-child) > .dropdown-toggle,
.input-group-btn:not(:last-child) > .btn:not(:first-child),
.input-group-btn:not(:last-child) > .btn-group:not(:first-child) > .btn {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.form-control + .input-group-addon:not(:first-child) {
  border-left: 0;
}

//
// Button input groups
//

.input-group-btn {
  position: relative;
  align-items: stretch;
  // Jankily prevent input button groups from wrapping with `white-space` and
  // `font-size` in combination with `inline-block` on buttons.
  font-size: 0;
  white-space: nowrap;

  // Negative margin for spacing, position for bringing hovered/focused/actived
  // element above the siblings.
  > .btn {
    position: relative;

    + .btn {
      margin-left: -1px;
    }

    // Bring the "active" button to the front
    &:hover, &:focus, &:active {
      z-index: 3;
    }

  }

  // Negative margin to only have a single, shared border between the two
  &:not(:last-child) {
    > .btn,
    > .btn-group {
      margin-right: -1px;
    }
  }
  &:not(:first-child) {
    > .btn,
    > .btn-group {
      z-index: 2;
      // remove nagative margin ($input-btn-border-width) to solve overlapping issue with button.
      margin-left: 0;

      // When input is first, overlap the right side of it with the button(-group)
      &:first-child {
        margin-left: -1px;
      }

      // Because specificity
      &:hover, &:focus, &:active {
        z-index: 3;
      }

    }
  }
}

.input-group-btn:first-child > .btn + .btn {
  margin-left: 0;
}
